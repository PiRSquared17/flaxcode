Flax
----

Flax is web based search system.

At the moment we are at the prototyping stage. Feel free to
experiment, but the software is not ready for production use.

Full documentation will be produced at some point. In the mean time
you have this file, the source, and whatever you can find on
http://flaxcode.googlecode.com.


Dependencies:
-------------

Flax depends on Python 2.5, available from http://www.python.org/

Flax also depends on several Python modules which are not part of the
standard distribution.  The easiest way to install these dependencies is
simply to run:

   python utils/install_dependencies.py

This will install the dependencies locally (to a directory "localinst",
which flax looks for when it starts up), so you won't need root or
administrator privileges.

Flax also depends on Xapian and its python bindings, which you currently
need to install manually (see http://www.xapian.org - you will need to use
a recent snapshot).


If you want to install the dependencies manually, you will need the
following pacakges:

- xapian with its python bindings (see http://www.xapian.org),
  currently you need a recent snapshot (release 1.0.3 does not contain all
  the needed features - hopefully 1.0.4 will be suitable).

- CherryPy - see http://www.cherrypy.org (cherrypy 3 is needed).

- HTMLTemplate - see http://freespace.virgin.net/hamish.sanderson/htmltemplate.html

- Xappy - see http://xappy.org/

  Note that Xappy is grabbed as an external when you check out Flax from
  Subversion, so if you're reading this file you probably already have it.
  However, if you don't use the install_dependencies.py file, you will need
  to install xappy somewhere on the Python path.

- htmltotext - This is included in the flax distribution (in
  libs/htmltotext), but if you don't use the install_dependencies.py file,
  you will need to install htmltotext somewhere on the Python path.

Platforms.
----------

At the moment Flax should on run any system where you can install all
the dependencies. The first release will probably only work fully on
Windows as we plan to use ifilters to get content from documents.  The
plan is for full functionality across at least windows/linux/mac in
the long run.


For the first release we will make a nice installer, in the mean time
check the code out from subversion (presumably you already have if
you're reading this) with e.g. ::

  svn checkout http://flaxcode.googlecode.com/svn/trunk/ flaxcode

then::

  cd flaxcode/src

then::

  python cpserver.py

Which will start the web server. By default the server will run on
port 8090, but you can change that by editing cp.conf. The server can
be terminated

Note that flax may start some other processes. These should all die
when the main

Administration functionality is available at
http://localhost:8090/admin

In the shipped state use login and password "admin" to access these
pages. This however depends on the cherrypy configuration mechanism
and if you change the file cp.conf then this may not work.

The web server will by default read its state from a file called
flax.flx, and on termination save its state to that file. The files
can be changed with command line options, invoke with --help for more
details. The format of this file is not guaranteed to be compatible
across different versions of Flax, so on updating from svn you might
need to delete any such files.

If the state file cannot be read for some reason (e.g. it's not
present or the data is corrupted) then the system will start with some
default settings.

To test that the indexer is working click on the "index now" button
from a document collection detail page in the web app and you should
see some diagnostic information being printed by the indexserver.



Changing look and feel
----------------------

It is intended that Flax will be customizable. You can change the
templates in flaxcode/src/templates (restart the web server for
changes to take effect). Note however that removing the HTMLTemplate
containers or repeaters will probably break things.  The only style
sheet currently used is in flaxcode/src/static/css/main.css.


Documentation
-------------

The docstrings can be used to generate some api documentation. Use::

   epydoc -v --config epydoc.conf

and then look in the html subdirectory. Epydoc at at least version 3
is needed, and since the doctrings are in restructured text format you
also need docutils installed.



